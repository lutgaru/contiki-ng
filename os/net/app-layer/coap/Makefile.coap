MAKE_WITH_DTLS ?= 0

ifeq ($(MAKE_WITH_DTLS),1)

 TINYDTLS_PATH := os/net/security/tinydtls

 ifeq (${wildcard $(CONTIKI)/$(TINYDTLS_PATH)/Makefile.tinydtls},)
  ${error Could not find the tinyDTLS submodule. Please run "git submodule update --init" and try again}
 endif

 CFLAGS += -DWITH_DTLS=1

 MODULES += os/net/app-layer/coap/tinydtls-support

ifeq ($(MAKE_WITH_GIFTCOFB),1)
    ${info with giftcofb}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc giftcofb/armcortexm_fast}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc giftcofb/ref}
    endif
    

else ifeq ($(MAKE_WITH_XOODYAK),1)
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc xoodyak/XKCP-ARMv7M}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc xoodyak/ref}
    endif

else ifeq ($(MAKE_WITH_ASCON128),1)
    ${info with ascon128v12}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon128v12/bi32_arm}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon128v12/ref}
    endif

else ifeq ($(MAKE_WITH_ASCON128A),1)
    ${info with ascon128av12}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon128av12/bi32_arm}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon128va12/ref}
    endif

else ifeq ($(MAKE_WITH_ASCON80),1)
    ${info with ascon80v12}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon80pqv12/bi32_arm}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc ascon/ascon80pqv12/ref}
    endif

else ifeq ($(MAKE_WITH_GRAIN128),1)
    ${info with grain128v12}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc grain/opt32}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc grain/ref}
    endif

else ifeq ($(MAKE_WITH_TINYJAMBU128),1)
    ${info with tinyjambu128}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu128/opt}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu128/ref}
    endif

else ifeq ($(MAKE_WITH_TINYJAMBU192),1)
    ${info with tinyjambu192}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu192/opt}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu192/ref}
    endif

else ifeq ($(MAKE_WITH_TINYJAMBU256),1)
    ${info with tinyjambu256}
    ifeq ($(TARGET),cc2538dk)
        ${info $(TARGET)}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu256/opt}
    else
        ${info native}
        MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc tinyjambu/tinyjambu256/ref}
    endif

else 
    ${info with aes}
    MODULES += $(TINYDTLS_PATH) ${addprefix $(TINYDTLS_PATH)/,aes sha2 ecc}
    ${info $(MODULES)}

endif

 MAKE_COAP_DTLS_KEYSTORE_NONE   := 0
 MAKE_COAP_DTLS_KEYSTORE_SIMPLE := 1
 MAKE_COAP_DTLS_KEYSTORE_LWM2M  := 2

 MAKE_COAP_DTLS_KEYSTORE ?= MAKE_COAP_DTLS_KEYSTORE_LWM2M

 ifeq ($(MAKE_COAP_DTLS_KEYSTORE),MAKE_COAP_DTLS_KEYSTORE_SIMPLE)
  CFLAGS += -DCOAP_DTLS_KEYSTORE_CONF_WITH_SIMPLE=1
 else ifeq ($(MAKE_COAP_DTLS_KEYSTORE),MAKE_COAP_DTLS_KEYSTORE_LWM2M)
  CFLAGS += -DCOAP_DTLS_KEYSTORE_CONF_WITH_LWM2M=1
 else ifeq ($(MAKE_COAP_DTLS_KEYSTORE),MAKE_COAP_DTLS_KEYSTORE_NONE)
  # No C flag needed for no keystore
 else
  ${error Unsupported CoAP DTLS keystore: $(MAKE_COAP_DTLS_KEYSTORE)}
 endif
endif
